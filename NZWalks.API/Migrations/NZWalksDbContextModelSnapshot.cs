// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalks.API.Data;

#nullable disable

namespace NZWalks.API.Migrations
{
    [DbContext(typeof(NZWalksDbContext))]
    partial class NZWalksDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalks.API.Model.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1e439f5-1367-4c1f-a9dd-f5bc481993c8"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("12001abb-fe0b-46de-ae53-d2f82845a91b"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("7ceb9dea-ffc8-4ecd-8379-3614f598844c"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalks.API.Model.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d4b3021-4ed4-4b47-9cb5-e9353d991539"),
                            Code = "AKL",
                            Name = "Auckland",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/d/d1/Auckland_Region_map_EN.png"
                        },
                        new
                        {
                            Id = new Guid("d4ffb7b8-579f-4dca-a9a1-4d5d0b55197c"),
                            Code = "WKO",
                            Name = "Waikato",
                            RegionImageUrl = "https://upload.wikimedia.org/wikipedia/commons/thumb/5/5b/Waikato_Region_location_in_New_Zealand.svg/250px-Waikato_Region_location_in_New_Zealand.svg.png"
                        },
                        new
                        {
                            Id = new Guid("05761056-cdbf-46e4-9dc4-eae8b2d4e749"),
                            Code = "BOP",
                            Name = "Bay of Plenty",
                            RegionImageUrl = "https://images.mapsofworld.com/newzealand/bay-of-plenty-map.jpg"
                        },
                        new
                        {
                            Id = new Guid("790e2b23-b023-40aa-a99d-72b2e6a6cdf9"),
                            Code = "GIS",
                            Name = "Gisborne",
                            RegionImageUrl = "https://www.exploretheeastcape.co.nz/uploads/6/1/5/1/61514749/7-gisborne_orig.jpg"
                        });
                });

            modelBuilder.Entity("NZWalks.API.Model.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZWalks.API.Model.Domain.Walk", b =>
                {
                    b.HasOne("NZWalks.API.Model.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalks.API.Model.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
